// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole{
  Admin
  member
}

enum TaskStatus{
  pending
  in_progress
  completed
}

model User{
  id String @id @default(cuid())
  name String
  email String @unique
  password String
  role UserRole @default(member)
  createdAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @default(now()) @map("uptadet_at")

  teamMember teamMembers[]
  tasks Task[]

  @@map("users")
}

model teams{
  id String @id @default(cuid())
  name String 
  description String
  createdAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @default(now()) @map("uptadet_at")

  teamMember teamMembers[]
  tasks Task[]

  @@map("teams")
}

model teamMembers{
  id String @id @default(cuid())
  userId String @map("user_id")
  teamId String @map("team_id")
  user User @relation(fields: [userId], references: [id])
  team teams @relation(fields: [teamId], references: [id])

  @@map("team_members")
}

model Task{
  id String @id @default(cuid())
  title String
  description String
  status TaskStatus @default(pending)
  assignedTo String @map("assigned_to")
  user User @relation(fields: [assignedTo], references: [id])

  teamId String @map("team_id")
  team teams @relation(fields: [teamId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  UpdatedAt DateTime @default(now()) @map("uptadet_at")
}
